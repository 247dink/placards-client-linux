name: Create release
on:
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
      - closed
    branches:
      - master

permissions:
  contents: write

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Check out
        uses: actions/checkout@master
        with:
          fetch-depth: 0
          token: ${{ secrets.PERSONAL_TOKEN }}

      - name: Install pipenv
        run: apt install -y pipenv

      - name: Lint
        run: make lint

      - name: Test
        run: make test

  release:
    runs-on: ubuntu-latest
    needs:
      - test
    if: github.event.pull_request.merged == true

    steps:
      - name: Check out
        uses: actions/checkout@master
        with:
          fetch-depth: 0
          token: ${{ secrets.PERSONAL_TOKEN }}

      - name: Set up git
        run: |
          git config user.email "${GITHUB_ACTOR}@users.noreply.github.com"
          git config user.name "${GITHUB_ACTOR}"

      - name: Increment version
        run: make bump

      - name: Get version
        id: get-version
        run: pipenv run bumpversion --dry-run --list patch  | grep current_version >> $GITHUB_OUTPUT

      - name: Build package
        run: make package

      - name: Git checkin
        env:
          VERSION: ${{ steps.get-version.outputs.version }}
        run: |
          git commit -am "v${VERSION}"
          git tag "v${VERSION}"

      - name: Git push
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.PERSONAL_TOKEN }}
          force: true

      - name: Create prerelease
        uses: ncipollo/release-action@v1
        with:
          tag: v${{ steps.get-version.outputs.version }}
          prerelease: true
          body: ${{ github.event.pull_request.title }}
          token: ${{ secrets.PERSONAL_TOKEN }}
          artifacts: dist/placards-${{ steps.get-version.outputs.current_version }}-py3-none-any.whl
